import{_ as i,M as p,p as l,q as u,R as n,N as s,V as e,t,a1 as o}from"./framework-a05dfeeb.js";const r={},d=o(`<h1 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h1><h3 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> <code>search</code></h3><p>Searches the entire collection of documents, and returns a list of search results.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fuse<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token comment">/* pattern , options*/</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The pattern can be one of:</p>`,5),k=o(`<p>The options:</p><ul><li><code>limit</code> (type: <code>number</code>): Denotes the max number of returned search results.</li></ul><h3 id="setcollection" tabindex="-1"><a class="header-anchor" href="#setcollection" aria-hidden="true">#</a> <code>setCollection</code></h3><p>Set/replace the entire collection of documents. If no index is provided, one will be generated. Example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> fuse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuse</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>

fuse<span class="token punctuation">.</span><span class="token function">setCollection</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pear&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add" aria-hidden="true">#</a> <code>add</code></h3><p>Adds a doc to the collection. Example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> fuse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuse</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>

fuse<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;banana&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token comment">// =&gt; 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> <code>remove</code></h3><p>Removes all documents from the list which the predicate returns truthy for, and returns an array of the removed docs. The predicate is invoked with two arguments: <code>(doc, index)</code>. Example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pear&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> fuse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuse</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>

<span class="token keyword">const</span> results <span class="token operator">=</span> fuse<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> doc <span class="token operator">===</span> <span class="token string">&#39;banana&#39;</span> <span class="token operator">||</span> doc <span class="token operator">===</span> <span class="token string">&#39;pear&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token comment">// =&gt; 2</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>
<span class="token comment">// =&gt; [&#39;banana&#39;, &#39;pear&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="removeat" tabindex="-1"><a class="header-anchor" href="#removeat" aria-hidden="true">#</a> <code>removeAt</code></h3><p>Removes the doc at the specified index. Example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pear&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> fuse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuse</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>

fuse<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>
<span class="token comment">// =&gt; [&#39;apple&#39;, &#39;banana&#39;, &#39;pear&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getindex" tabindex="-1"><a class="header-anchor" href="#getindex" aria-hidden="true">#</a> <code>getIndex</code></h3><p>Returns the generated Fuse index. Example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pear&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> fuse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuse</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fuse<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function v(m,h){const a=p("RouterLink"),c=p("Donate");return l(),u("div",null,[d,n("ul",null,[n("li",null,[s(a,{to:"/examples.html#search-string-array"},{default:e(()=>[t("String")]),_:1})]),n("li",null,[s(a,{to:"/examples.html#nested-search"},{default:e(()=>[t("Path")]),_:1})]),n("li",null,[s(a,{to:"/examples.html#extended-search"},{default:e(()=>[t("Extended query")]),_:1})]),n("li",null,[s(a,{to:"/api/query.html"},{default:e(()=>[t("Logical query")]),_:1})])]),k,s(c)])}const b=i(r,[["render",v],["__file","methods.html.vue"]]);export{b as default};
